<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport"
    content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no">
  <title>covid-19-map</title>
  <link rel="stylesheet" href="/stylesheets/style.css">
  <script type="text/javascript" src="https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=n9dlshrueb"></script>
  <script src="https://code.jquery.com/jquery-3.5.1.min.js"
    integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
  <script type="text/javascript"
    src="//dapi.kakao.com/v2/maps/sdk.js?appkey=d54bd27077223bd9686d3bdc8aeda225&libraries=services"></script>

</head>

<body>
  <div id="navbar">MY FIRST MAP</div>
  <div id="infoBox">
    <div id="infoTitle">현재 날짜</div>
    <!-- <div id="infoContent">2020.10.17</div> -->
  </div>
  <div id="search">
    <input id="search_input" placeholder="목적지를 입력해 주세요" />
    <button id="search_button">검색</button>
  </div>
  <div id="current">현재 위치</div>
  <div id="map" style="width:100%;height:100vh;"></div>

  <script type="text/javascript" src="/data/data.js"></script>
  <script>

    function toDay() {
      let date = new Date();
      const year = date.getFullYear();
      const month = date.getMonth() + 1;
      const day = date.getDate();

      let todayDate = `${year}.${month}.${day}`;

      return todayDate;
    }

    let infoDate = document.createElement('div');
    infoDate.classList.add('infoContent');
    infoDate.innerHTML = toDay();
    document.getElementById('infoBox').appendChild(infoDate);


    var mapOptions = {
      center: new naver.maps.LatLng(37.3595704, 127.105399),
      zoom: 10
    };

    var map = new naver.maps.Map('map', mapOptions);

    var markerList = [];
    var infowindowList = [];

    //마커(커스터 마이징)
    for (var i in data) {
      var target = data[i];
      var latlng = new naver.maps.LatLng(target.lat, target.lng);

      marker = new naver.maps.Marker({
        map,
        position: latlng,
        icon: {
          content: `<div class="marker"></div>`,
          anchor: new naver.maps.Point(12, 12),
        },
      });

      var content = `
      <div class="infowindow_wrap">
        <div class="infowindow_title">${target.title}</div>
        <div class="infowindow_content">${target.content}</div>
        <div clas="infowindow_date">${target.date}</div>
      </div>`;

      var infowindow = new naver.maps.InfoWindow({
        content,
        backgroundColor: '#00ff0000',
        borderColor: '00ff0000',
        anchorSize: new naver.maps.Size(0, 0) //꼬리표 설정
      });

      markerList.push(marker);
      infowindowList.push(infowindow);
    }

    function getClickHandler(i) {
      return function () {
        var marker = markerList[i];
        var infowindow = infowindowList[i];

        //infowindow 지도 위에 표시되어있는지 true false;
        if (infowindow.getMap()) {
          infowindow.close(); // 열려 있을면 닫아줌
        } else {
          infowindow.open(map, marker);//
        }
      }
    }
    //지도눌렀을때 마커가 사라지는 기능
    function ClickMap(i) {
      return function () {
        var infowindow = infowindowList[i];
        infowindow.close();
      }
    }

    for (var i = 0; i < markerList.length; i++) {

      naver.maps.Event.addListener(map, "click", ClickMap(i));
      naver.maps.Event.addListener(markerList[i], "click", getClickHandler(i));
    }
    //현재위치를 확대하는
    let currentUse = true;

    $('#current').click(() => {
      if ('geolocation' in navigator) {
        navigator.geolocation.getCurrentPosition(function (position) {
          const lat = position.coords.latitude;
          const lng = position.coords.longitude;
          const latlng = new naver.maps.LatLng(lat, lng);
          //마커 생성
          //여러번  현재 위치를 불러올때 반복적으로 덧필하는 것을 해결하기 위함
          //변수를 선언해 줌으로써 최초에 한번만 currentUse가 true일때 코드를 동작하게 오류 발생 해결 
          if (currentUse) {
            marker = new naver.maps.Marker({
              map,
              position: latlng,
              icon: {
                content: `<img class="pulse" draggable="false" unselected="on" src="https://myfirstmap.s3.ap-northeast-2.amazonaws.com/circle.png">`,
                anchor: new naver.maps.Point(11, 11),
              }
            });
            currentUse = false
          }
          map.setZoom(14, true);
          map.panTo(latlng);
        });
      } else {
        alert('위치 정보 사용 불가능')
      }
    });
    //목적지 검색을 위함
    let ps = new kakao.maps.services.Places();
    let search_arr = [];

    $('#search_input').on('keydown', function (e) {
      if (e.keyCode === 13) {
        //this는 search_input을 의미함/input에 입력하는 값이 content에 저장
        let content = $(this).val();
        ps.keywordSearch(content, placeSearchCB);
      }
    });
    $('#serach_button').on('click', function (e) {
      let content = $('#search_input').val();

    })

    function placeSearchCB(data, status, pagination) {
      if (status === kakao.maps.services.Status.OK) {
        //넘어오는 데이터 중에 처음에 있는 결과 값을 target으로 설정
        let target = data[0];
        const lat = target.y;
        const lng = target.x;
        const latlng = new naver.maps.LatLng(lat, lng);
        //마커로 표시
        marker = new naver.maps.Marker({
          map: map,
          position: latlng,
        });
        if (search_arr.length === 0) {
          search_arr.push(marker)
        } else {
          search_arr.push(marker);
          let pre_marker = search_arr.splice(0, 1);
          pre_marker[0].setMap(null);
        }
        map.setZoom(14, true);
        map.panTo(latlng);

      } else {
        alert('검색 결과가 없습니다.');
      }
    }



    // marker = new naver.maps.Marker({
    //   map,
    //   position:new naver.maps.LatLng(37.3595704, 127.105399),
    //   icon:{
    //     content:`<div class="marker"></div>`
    //   }
    // });

  </script>
</body>

</html>